#!/bin/sh -e

. /usr/share/debconf/confmodule
#DEBHELPER#

# this small function prepares mythweb.conf for authentication setup
# the first argument to this function is the apache configuration file
# (mythweb.conf usually), the second one is the htdigest passwordfile
# (only enableauth uses the second argument)

enableauth()
{
    sed -i \
    -e "s/^    \#    AuthType/    AuthType/" \
    -e "s/^    \#    AuthName/    AuthName/" \
    -e "s/^    \#    AuthUserFile/    AuthUserFile/" \
    -e "s/^    \#    Require/    Require/" \
    -e 's/^    \#    BrowserMatch       "MSIE"/    BrowserMatch       "MSIE"/' \
    -e "s/^    \#    Order/    Order/" \
    -e "s/^    \#    Satisfy/    Satisfy/" \
    -e "s,/var/www/htdigest,${2}," ${1}
}

disableauth()
{
    sed -i \
    -e "s/^    AuthType/    \#    AuthType/" \
    -e "s/^    AuthName/    \#    AuthName/" \
    -e "s/^    AuthUserFile/    \#    AuthUserFile/" \
    -e "s/^    Require/    \#    Require/" \
    -e 's/^    BrowserMatch       "MSIE"/    \#    BrowserMatch       "MSIE"/' \
    -e "s/^    Order/    \#    Order/" \
    -e "s/^    Satisfy/    \#    Satisfy/" ${1}
}

reload_apache()
{
    if apache2ctl configtest 2>/dev/null; then
        if invoke-rc.d apache2 status 2>/dev/null 1>/dev/null; then
            invoke-rc.d apache2 force-reload || true
        fi
    else
        echo "Your apache2 configuration is broken, so we're not restarting it for you."
    fi
}

cleanup()
{
    db_set mythtv/mysql_mythtv_password ""
    db_set mythweb/password ""
    db_set mythweb/username ""
}

case "$1" in
    configure)

        db_get mythtv/mysql_host
        hostname="$RET"
        db_get mythtv/mysql_mythtv_dbname
        database="$RET"
        db_get mythtv/mysql_mythtv_user
        mythtv_username="$RET"
        db_get mythtv/mysql_mythtv_password
        mythtv_password="$RET"

        db_get mythweb/enable || true
        AUTH_ENABLE="$RET"
        db_get mythweb/username || true
        USERNAME="$RET";
        db_get mythweb/password || true
        PASSWORD="$RET";
        db_get mythweb/only || true
        ONLY="$RET"
        
        DEFAULT_CONFIG=/etc/default/mythweb
        cat > $DEFAULT_CONFIG << EOF
[cfg]
enable = 
only = 
username = 
password = 
EOF

        MYTHWEBCONF=/etc/apache2/sites-available/mythweb.conf
        NEW=${MYTHWEBCONF}.new
        touch $NEW

        if [ -s $MYTHWEBCONF ]; then
            INPUT=$MYTHWEBCONF
            chown --reference=$INPUT $NEW || true
            chmod --reference=$INPUT $NEW || true
        else
            INPUT=/usr/share/mythtv/mythweb/mythweb.conf.apache
        fi

        if [ -s $MYTHWEBCONF ]; then
            cp --remove-destination $MYTHWEBCONF ${MYTHWEBCONF}.dpkg-old || true
            # FIXME: do I need "cp --remove-destination"?
        fi

        cat $INPUT | sed -e "
s/\(^[ \t]*setenv[ \t]\+db_server[ \t]\+\"\)[^\"]*\"/\1$hostname\"/g;
s/\(^[ \t]*setenv[ \t]\+db_name[ \t]\+\"\)[^\"]*\"/\1$database\"/g;
s/\(^[ \t]*setenv[ \t]\+db_login[ \t]\+\"\)[^\"]*\"/\1$mythtv_username\"/g;
s/\(^[ \t]*setenv[ \t]\+db_password[ \t]\+\"\)[^\"]*\"/\1$mythtv_password\"/g;
            " > $NEW
            
        if [ -e /var/www/mythweb ]; then
            # replace /var/www/html with /var/www/mythweb
            perl -pi -e 's/\/var\/www\/html/\/var\/www\/mythweb/g;' $NEW
        fi
            
        mv -f $NEW $MYTHWEBCONF

        MYTHWEBDIR=/etc/apache2/sites-available/mythwebdir
        if test -f $MYTHWEBDIR; then
            a2dissite mythwebdir >/dev/null || true
            mv $MYTHWEBDIR ${MYTHWEBDIR}.dpkg-old
        fi

        ACCESS=/etc/mythtv/mythweb-htaccess.conf
        if test -f $ACCESS; then
            mv $ACCESS ${ACCESS}.dpkg-old
        fi

        CONFIG=/etc/mythtv/mythweb-settings.php
        if test -f $CONFIG; then
            mv $CONFIG ${CONFIG}.dpkg-old
        fi

        cachedir=/var/cache/mythweb/image_cache
        if ! dpkg-statoverride --list $cachedir; then
            chgrp www-data $cachedir
            chmod 1775 $cachedir
        fi

        datadir=/usr/share/mythtv/mythweb/data
        if ! dpkg-statoverride --list $datadir; then
            chgrp www-data $datadir
            chmod 775 $datadir
        fi
        
        LINKS='
/var/lib/mythtv/music^music
/var/lib/mythtv/recordings^recordings
/var/lib/mythtv/videos^video
/var/lib/mythtv/videos^video_covers
/var/cache/mythweb/image_cache^tv_icons
/var/cache/mythweb/image_cache^cache'
        for LINK in $LINKS; do
            TARGET=${LINK%^*}
            NAME=${datadir}/${LINK#*^}
            if ! [ -L $NAME ]; then
                if ! [ -e $NAME ]; then
                    ln -s $TARGET $NAME
                fi
            fi
        done

        #We're using apache
        if [ -e /etc/apache2/apache2.conf ]; then

            # handle password protection/ authentication setup
            # get our values from the DB
            DIGESTFILE=/etc/mythtv/mythweb-digest
            if [ "$AUTH_ENABLE" = true ]; then
                a2enmod auth_digest > /dev/null || true

                # create htdigest file
                # create password hash
                # thanks to http://trac.lighttpd.net/trac/wiki/Docs:ModAuth :)
                HASH=`echo -n ${USERNAME}:MythTV:${PASSWORD} | md5sum | cut -b -32` || true
                echo ${USERNAME}:MythTV:${HASH} > $DIGESTFILE
                enableauth "${MYTHWEBCONF}" "${DIGESTFILE}" || true
                chown mythtv:www-data ${DIGESTFILE}
                chmod 640 ${DIGESTFILE}
            elif [ "$AUTH_ENABLE" = false ]; then
                disableauth "${MYTHWEBCONF}" || true
            fi

            # Enable rewrite_module and reload apache.
            a2enmod rewrite >/dev/null || true
            a2ensite mythweb.conf >/dev/null || true

            # Usability feature to make / redirect to /mythweb in apache
            BASE=/etc/apache2
            DIR_AVAILABLE=${BASE}/sites-available
            DIR_ENABLED=${BASE}/sites-enabled
            CONFIG=default

            #not enabled & we want to enable redirect
            if [ ! -e ${DIR_ENABLED}/${CONFIG}-mythbuntu ] && [ "$ONLY" = true ] && \
               [   -e ${DIR_AVAILABLE}/${CONFIG} ]; then
                cp ${DIR_AVAILABLE}/${CONFIG} ${DIR_AVAILABLE}/${CONFIG}-mythbuntu
                perl -pi -e 's/(<VirtualHost \*:80>)/$1\n\tDirectoryIndex mythweb/i' ${DIR_AVAILABLE}/${CONFIG}-mythbuntu
                DISABLE=${CONFIG}
                ENABLE=${CONFIG}-mythbuntu
            #already enabled & we want to disable redirect
            elif [ -e ${DIR_ENABLED}/${CONFIG}-mythbuntu ] && [ "$ONLY" = false ]; then
                ENABLE=${CONFIG}
                DISABLE=${CONFIG}-mythbuntu
            fi
            if [ -n "${ENABLE}" ]  && [ -e "${DIR_AVAILABLE}/${ENABLE}" ]; then
                a2ensite ${ENABLE} > /dev/null || true
            fi
            if [ -n "${DISABLE}" ] && [ -e "${DIR_AVAILABLE}/${DISABLE}" ]; then
                a2dissite ${DISABLE} >/dev/null || true
            fi

            reload_apache
        fi

        # This is a known issue precipitaing from older installs
        # LP Bug: 329053
        if [ -e /etc/mythtv/mythweb-htaccess ]; then
            mv /etc/mythtv/mythweb-htaccess /etc/mythtv/mythweb-htaccess.obsolete
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        cleanup
        exit 1
    ;;
esac

cleanup
exit 0
